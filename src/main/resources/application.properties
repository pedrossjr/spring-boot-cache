spring.application.name=Performance com Cache
application.description=Cache na Prática: ganhando performance com simples estratégias

# Swagger-ui custom path
springdoc.swagger-ui.path=/cache/docs/api

######################################################################################
# Utilizacao com cache do Redis
######################################################################################

spring.cache.type=redis
spring.cache.redis.time-to-live=15000
spring.redis.host=cache
spring.redis.port=6379
#spring.redis.password=S5k5qv
logging.level.org.springframework.cache=TRACE

######################################################################################
# Configuracao do PostgreSQL
######################################################################################

spring.datasource.url=jdbc:postgresql://localhost:5432/db_cache
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driverClassName=org.postgresql.Driver

######################################################################################
# Configuracao do Hibernate (JPA)
######################################################################################

spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=create
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.defer-datasource-initialization=true
spring.jpa.show-sql=true

######################################################################################
# Pool de Conexoes (HikariCP - recomendado)
######################################################################################

spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.connection-timeout=30000